# https://moonrepo.dev/docs/config/project
# yaml-language-server: $schema=https://moonrepo.dev/schemas/project.json
$schema: 'https://moonrepo.dev/schemas/project.json'

type: application
language: go
toolchain:
  default: null
stack: backend
tags: ['app']

# Overrides the name (identifier) of the project
id: 'go-app'

project:
  name: go-app
  description: 'My backend application'

env:
  APP_NAME: '$(go list -m)'
  APP_VERSION: '$(jq -r .version <$workspaceRoot''/package.json'')'

tasks:
  dev:
    command: "air -c air.toml"
    deps: [kill-port]
    options:
      envFile: "/.env"

  build:
    command: 'go build -o build/release/go-app'
    deps: [tidy]

  start:
    command: 'build/release/go-app'
    options:
      cache: false

  tidy:
    command: 'go mod tidy && go mod vendor'

  kill-port:
    # This is a hack for killing the port 8000 before starting the app
    command: 'pnpm --package=kill-port-process-cli dlx kill-port 8000'
    deps: [tidy]
    options:
      internal: true

  docker-build:
    command: 'docker build -f $projectRoot/Dockerfile . -t $APP_NAME:$APP_VERSION'
    options:
      outputStyle: stream
      runFromWorkspaceRoot: true
      runInCI: false
      cache: false
      shell: true

  docker-run:
    command: 'docker run --network=host --rm -it --env-file .env --name $APP_NAME $APP_NAME:$APP_VERSION'
    options:
      runFromWorkspaceRoot: true
      interactive: false
      outputStyle: stream
      runInCI: false
      cache: false
      shell: true

  docker-shell:
    command: 'docker run --network=host --rm -it --env-file .env --entrypoint /bin/sh $APP_NAME:$APP_VERSION'
    options:
      runFromWorkspaceRoot: true
      interactive: false
      outputStyle: none
      runInCI: false
      cache: false
      shell: true

  docker-images:
    command: 'docker image list --filter reference=$APP_NAME:\\*'
    options:
      runFromWorkspaceRoot: true
      outputStyle: none
      runInCI: false
      cache: false
      shell: true
